---
title: "Git Bash Hints"
editor: visual
---

This page will cover a few useful commands that you can use in Git bash.

## Viewing Files and Directories

The commands in this section help you list and view the contents of directories, providing detailed information about files and sub-directories.

```{r, eval = FALSE}

```


## Checking and Navigating Directories

The commands in this section allow you to check and change your current working directory, moving between different folders in your file system.

To check your working directory, we would enter the following in Git bash: 

```{r, eval = FALSE}

pwd

```

`pwd` stands for "print working directory" so it will show you your current working directory for Git.

To change your working directory, we would enter the following in Git bash and replace `/path_to/working_directory/you_want` with the actual path: 

```{r, eval = FALSE}

cd /path_to/working_directory/you_want

```

`cd` stands for "change directory" so it will point to where you want your directory to be. 

## Creating and Removing Files and Directories

### Creating directories 

The commands in this section enable you to create new directories, remove files, and delete empty directories.

To create a directory, we would enter the following into Git bash*: 

```{r, eval=FALSE}

mkdir /path_to_the_directory_you_want_to_create/new_directory_name

```

*We would replace `/path_to_the_directory_you_want_to_create/` with an actual path and `new_directory_name` to an actual directory name.

`mkdir` stands for "make directory. 

### Removing directories 

To remove a directory and its contents, we would enter the following* into Git bash: 


```{r, eval=FALSE}

rm -r /path_to_the_directory/directory_name

```

### Removing files

Assuming we're already in the directory we want, we can remove a file from it by entering the following into Git bash: 


:::{.callout-important}

Make sure you're in the correct directory before using this command
:::

```{r, eval=FALSE}

rm -r file_name.extention

```

You need to make sure to include the extension of the file in the command or it will not work. 

## Viewing File Contents

The commands in this section allow you to display the contents of files, either in full or in parts, for easy reading and inspection.

## Searching and Finding Files

The commands in this section help you search for files and directories based on patterns and search within files for specific text.

## Permissions and Ownership

The commands in this section enable you to change file permissions and ownership, controlling access and modifying file attributes.

*We would replace /path_to_the_directory/ and directory_name with the actual directory. 
