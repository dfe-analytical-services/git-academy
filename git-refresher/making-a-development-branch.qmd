---
title: "Making a development branch"
---

This section will guide you through how to create a development branch, taking the main branch you created as a base.

When you create a git project, it will automatically create a "main" (sometimes "master") branch for you. This is where the code that has been QA'd and you are happy with should sit.

It is good practice to have at least one other branch. Having two branches means that if anything goes wrong in the "development branch", the "main" branch is still unaffected and runs without issue. This lets you test and QA the code more thoroughly before merging into your main branch.

Chose a method below to create your development branch:

::: panel-tabset
## Git Bash

1.  Ensure you're on your own personal main branch that you created in [making a branch](#making-a-branch). If you aren't sure use:

``` bash
git checkout -b <github_username>/main
```

2.  Pull the latest changes from the remote repository.

``` bash
git pull origin <github_username>/main
```

3.  Create your new development branch

``` bash
git checkout -b <github_username>/development
```

4.  Push the new branch to the remote repository:

``` bash
git push -u origin <github_username>/development
```

5.  Check that the new branch shows in the branch list.

``` bash
git branch
```

![Creating a new branch in GitBash](./images/dev_branch_GitBash.png)

## RStudio

Ensure you are on your personal main branch.

In the Git panel, click the purple new branch symbol ![symbol containing two purple boxes branching from a diamond](images/new-branch_rstudio-button.png) as circled in the screenshot below.

Then enter your development branch name as **`<github_username>/development`** (but replacing <github_id> with your own GitHub username, e.g. `jsmith_development`)

![Creating a new branch in RStudio](./images/dev_branch_RStudio.png)

## GitHub Desktop

Click **Branch** in the menu bar and then select **New branch...** as shown in the screenshot below.

Then enter your branch name as **`<github_username>/development`** (but replacing <github_id> with your own GitHub username, e.g. `jsmith_main`)

![Creating a new branch in GitHub Desktop](./images/dev_branch_GitHubDesktop.png)

## VS Code

The current branch **`(<github_username>main)`** should be listed in the very bottom left hand corner of the VS Code window frame. If you left click on this, you should then see a menu appear at the top of the VS Code window with some branch options (as shown in the screen shot below).

Click **+ Create new branch...** and then enter your branch name as **`<github_username>/development`** (but replacing <github_id> with your own GitHub username, e.g. `jsmith_development`).

You should now see the branch name listed in the bottom left of the window frame shown as the branch you just created, meaning any changes you currently make will be applied to that new development branch (and not the main branch, or your personal main branch).


## PyCharm

Open up the Git panel in PyCharm and you should see something like the screenshot below. Right click on your **`<github_username>/main`** branch and select **New branch from '\<github_id\>/main'...**.

Then enter your branch name as **`<github_username>/development`** (but replacing <github_id> with your own GitHub username, e.g. `jsmith_development`).

![Creating a new branch in PyCharm](./images/dev_branch_PyCharm.png)

:::

Now you have made your development branch, go to your git log and update tick the 'making a development branch' box. Use the [recording changes](recording-changes) section for a reminder on how to make and save changes. Ensure to commit your changes. 
