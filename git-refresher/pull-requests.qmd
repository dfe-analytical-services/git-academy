--- 
title: "Pull requests"
---

A [pull request](../glossary.html#pull_request)  allows you to notify your team about changes you've committed and pushed to a branch in a repository on GitHub. Once a pull request is opened, you can discuss and review the potential changes with collaborators and add any necessary follow-up commits before the changes are merged into the main branch.

Now you have made changes in your [development branch](making-a-development-branch), we will practice this by merging the changes into your main branch using a pull request.

## Creating pull requests

Once you have made all the changes you want to include in this batch of work, you'll bundle all of your commits together into a pull request for review.

::: panel-tabset
## Git Bash

1. Ensure you are on the development branch. 

``` bash
git checkout -b <github_username>/development
```

2. Check all your latest changes are pushed to the remote repository. 
``` bash
git push origin <github_username>/development
```
3. Create your pull request, adding a title and a description of your changes 

``` bash
gh pr create --base <github_id>/main --head <github_id>/development --title "Update to log book" --body "Updating logbook to reflect completing the development branch task."
```

## Rstudio and GitHub Website

1. In the Git panel, ensure you are on the development branch. 
2. Check you have pushed your latest changes to the remote repository by clicking the green 'Push' button in the Git window.
3. Go to the [git-academy-sandbox](https://github.com/dfe-analytical-services/git-academy-sandbox) repository page on GitHub.
4. Navigate to the Pull requests tab underneath the repository title. 

![](images/pull_requests_tab.png){fig-alt="Higlighting the Pull requests tab on GitHub."}


5. Open a pull request by clicking the "New pull request" button.

6. Ensure the base branch is set to your own main branch (<github_username>/main)  and the compare branch is set to your development branch (<github_username>/development).

![](images/pull_request_branch_selection.png){fig-alt="Higlighting where to change the base and compare branches once you have pressed the 'create a pull request' button on GitHub."}


7. Create Pull Request: Click the "Create pull request" button. Add a title and description for your pull request. You may wish to explain what changes and been made, and why. 

8. You don't need to add any reviewers in this training, but please do take a moment to notice where you can add team mates to review your pull requests in your own work to the right of the description. Any reviewers you add will be notified by email that there is a pull request for them to review.  

9. Once you are happy with your title and description, click 'Create pull request' to confirm. 

10. You will then want to check whether there are any merge conflicts. If there are merge conflicts, they will need resolving before you are able to complete your pull request. 

## GitHub Desktop

1. Ensure you are on the development branch. 

2. Click on the 'Branch' menu and 'Create pull request' 

3. Click 'open in browser'. This will open GitHub in your web browser with the pull request form pre-filled. 

4. Add a title and description for you pull request and then click 'Create pull request' 

## VS Code 

## PyCharm 
::: 

## Reviewing pull requests

When a pull request is created, it's important to review the changes carefully. This process helps ensure that the code meets the project's standards and doesn't introduce any new issues. During the review, you can discuss the changes with the author, suggest improvements, and request additional commits if necessary.

We will practice this by reviewing the pull request you have just made. 

### GitHub Website

1. Go back to the [git-academy-sandbox](https://github.com/dfe-analytical-services/git-academy-sandbox) repository overview page on GitHub, as if you have just come to find the pull request your colleague has asked you to review. 

2. Navigate to the 'Pull requests' tab. 

3. Click on the pull request you want to review, in this case the one you created above. 

![](images/pull-request-in-GitHub.png){fig-alt="Higlighting where open pull requests show in GitHub once the Pull request tab has been opened."}

4. Review the changes by looking at the "Files changed" tab. You can see a side-by-side comparison of the changes made.Add comments by clicking the "+" icon next to the lines of code you want to comment on.

![](images/pull-request-files-changed.png){fig-alt="Higlighting where to view comparison of changes made and make comments on a pull request."}

5. When reviewing pull requests, you may also wish to view changes locally to check the code runs and view any outputs.You can do this by pulling and changing to the branch that is being requested to be merged in.   

6. Once you have reviewed the changes, you can leave general feedback, approve or request changes by clicking the 'review changes' button.

![](images/pull-request-review.png){fig-alt="Higlighting where to provide general feedback, request changes or approve on a pull request."}

7. Once you are happy with the changes, you should approve the pull request. The person who created the request will then get an email letting them know their changes have been approved and can go back and complete the request. 

